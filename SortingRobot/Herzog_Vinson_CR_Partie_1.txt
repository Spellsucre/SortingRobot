Projet 2I006
Sorting Robot
HERZOG David
VINSON Paul

PARTIE 1 : Algorithme "au plus proche"

----------------------------------------------------------------------------------------------------

1. Recherche Naive:

	Q 1.1
		
	Q 1.2
		On ajoute U (up), D (down), L (left), R (right) le nombre de fois nécessaire pour atteindre les coordonnées souhaitées.
	
	Q 1.3
		a) Une case est noire si sa couleur vaut celle de sa pièce courante
		b) Une pièce n'est pas noir si sa couleur est différente de celle de sa pièce courante
		c) Le robot porte une pièce si l'attribut robot de la grille n'est pas -1
		d) La couleur du robot est l'attribut robot de la grille
	
	Q 1.4 
		Parcours linéaire du tableau, on cherche le plus proche, donc la distance minimum entre le robot et la case, en terme de nombre de déplacements.

	Q 1.5 
		Si le robot ne porte rien, il va a la case la plus proche non noire de lui.
		Sinon, il va à la case la plus proche non noire de la même couleur.
		Répéter jusqu'à l'obtention d'une grille noire.

	Q 1.6 
		CF Graphiques.

	Q 1.7
		Fait.

----------------------------------------------------------------------------------------------------
	
2. Recherche Circulaire :

	Q 2.1

	Q 2.2
		CF Graphiques.

	Q 2.3
		La complexité pire cas de la méthode naive est en n²
		La complexité pire cas de la méthode circulaire est en n²
		Cependant, la complexité de la méthode naive est constante, contrairement à celle de la méthode circulaire qui a une complexité moyenne plus intéressante. C'est ce qui se remarque sur les graphes.

----------------------------------------------------------------------------------------------------
	
2. Recherche par Couleur :
	

